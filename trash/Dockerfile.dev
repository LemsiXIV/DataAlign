# Use Python 3.13 image
FROM dockerproxy.repos.tech.orange/python:3.13.0-slim

# Set working directory
WORKDIR /app

# Install system dependencies in single layer
RUN apt-get update && apt-get install -y \
    default-libmysqlclient-dev \
    build-essential \
    pkg-config \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/* \
    && npm config set registry https://registry.npmjs.org/

# Create non-root user early
RUN useradd --create-home --shell /bin/bash dataalign

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --trusted-host pypi.org \
    --trusted-host pypi.python.org \
    --trusted-host files.pythonhosted.org \
    -r requirements.txt

# Copy wait script
COPY wait-for-mysql.sh /app/wait-for-mysql.sh
RUN chmod +x /app/wait-for-mysql.sh

# Copy package.json and install Node deps (including dev dependencies for build tools)
COPY package*.json ./
RUN npm ci

# Copy project files
COPY . .

# Create directories and build assets (before switching to non-root user)
RUN mkdir -p /app/logs /app/uploads/source /app/uploads/archive /app/temp /app/backups

# Build CSS with fallback approach
RUN npx tailwindcss -i ./app/static/src/input.css -o ./app/static/dist/output.css --minify || \
    (echo "Tailwind build failed, creating empty CSS file" && mkdir -p ./app/static/dist && touch ./app/static/dist/output.css)

# Set ownership
RUN chown -R dataalign:dataalign /app

# Switch to non-root user
USER dataalign

# Create migration flag
RUN touch /app/DISABLE_AUTO_MIGRATIONS

# Expose port
EXPOSE 5004

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5004/ || exit 1

# Start app
CMD ["python", "run.py"]