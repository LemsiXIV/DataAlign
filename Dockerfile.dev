# Development Dockerfile for DataAlign v2.0
# Optimized for development with hot reload and debugging

FROM python:3.13.0-slim

# Install system dependencies for development
RUN apt-get update && apt-get install -y \
    wget \
    fontconfig \
    libfreetype6 \
    libjpeg62-turbo \
    libpng16-16 \
    libx11-6 \
    libxcb1 \
    libxext6 \
    libxrender1 \
    xfonts-75dpi \
    xfonts-base \
    curl \
    git \
    && wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb \
    && apt-get install -y ./wkhtmltox_0.12.6.1-3.bookworm_amd64.deb \
    && rm wkhtmltox_0.12.6.1-3.bookworm_amd64.deb \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first (for Docker layer caching)
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Install development dependencies
RUN pip install --no-cache-dir \
    flask-debugtoolbar \
    watchdog \
    pytest \
    pytest-cov

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p uploads temp logs

# Set permissions
RUN chmod 755 uploads temp logs

# Set environment variables for development
ENV FLASK_ENV=development
ENV FLASK_DEBUG=true
ENV AUTO_MIGRATION=true
ENV AUTO_PDF_GENERATION=true
ENV PYTHONPATH=/app
ENV CREATE_INITIAL_USERS=true

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Development command with hot reload and user creation
CMD ["sh", "-c", "python create_docker_users.py && python run.py"]
