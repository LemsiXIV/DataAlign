# Development Dockerfile for DataAlign v2.0 - Optimized for faster builds
FROM python:3.13.0-slim

# Set working directory
WORKDIR /app

# Install system dependencies in one layer
RUN apt-get update && apt-get install -y \
    default-libmysqlclient-dev \
    build-essential \
    pkg-config \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user early
RUN useradd --create-home --shell /bin/bash dataalign

# Copy requirements FIRST (for Docker layer caching)
COPY requirements.txt package*.json ./

# Install Python dependencies (cached if requirements.txt doesn't change)
RUN pip install --no-cache-dir -r requirements.txt

# Install Node dependencies (cached if package.json doesn't change)
RUN npm ci

# Create directories before copying code
RUN mkdir -p /app/logs /app/uploads/source /app/uploads/archive /app/temp /app/backups

# Copy application code (this layer changes most often)
COPY . .

# Build CSS assets with fallback
RUN npx tailwindcss -i ./app/static/src/input.css -o ./app/static/dist/output.css --minify || \
    (echo "Tailwind build failed, creating empty CSS file" && mkdir -p ./app/static/dist && touch ./app/static/dist/output.css)

# Set ownership to dataalign user
RUN chown -R dataalign:dataalign /app

# Switch to non-root user
USER dataalign

# Expose port
EXPOSE 5004

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:5004/health || exit 1

# Start command
CMD ["python", "run.py"]
